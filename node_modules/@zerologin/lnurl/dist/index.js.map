{"version":3,"sources":["../src/index.ts","../src/utils.ts"],"sourcesContent":["import { bech32 } from \"bech32\";\nimport { getLnurlObject, getRootDomain } from \"./utils.js\";\n\nconst limit = 1023;\nconst prefix = \"lnurl\";\n\ninterface LnurlDecoded {\n  decoded: string,\n  domain: string,\n  tag: string,\n  k1: string,\n  action: string,\n}\n\nconst decode = (lnurl: string): LnurlDecoded => {\n  const protocol = 'lightning:'\n  if (lnurl.toLowerCase().includes(protocol)) {\n    lnurl = lnurl.toLowerCase().split('lightning:')[1]\n  }\n  \n  const decoded = bech32.decode(lnurl, limit);\n  const decodedString = Buffer.from(bech32.fromWords(decoded.words)).toString(\"utf8\");\n\n  const split = decodedString.split('?')\n  if (split.length !== 2) {\n    throw new Error(`Cannot decode LNURL string ('${lnurl}')`);\n  }\n\n  const url = split[0]\n  const domain = getRootDomain(url)\n  const lnurlObject = new URLSearchParams(split[1])\n  return { decoded: decodedString, domain, tag: getLnurlObject(lnurlObject, \"tag\"), k1: getLnurlObject(lnurlObject, \"k1\"), action: getLnurlObject(lnurlObject, \"action\") };\n};\n\nconst encode = (unencoded: string): string => {\n  let words = bech32.toWords(Buffer.from(unencoded, \"utf8\"));\n  return bech32.encode(prefix, words, limit).toUpperCase();\n};\n\nexport { decode, encode };\n","export const getRootDomain = (url: string) => {\n    //Regex doesn't work without protocol, so add a default one\n    if (!url.includes('://')) {\n        url = 'http://' + url\n    }\n\n    const regex = /^.*:\\/\\/(?:[wW]{3}\\.)?([^:\\/]*).*$/gm\n    const result = regex.exec(url)\n    if (result && result.length > 1) {\n        return result[1]\n    }\n    throw new Error(`Cannot get root domain for \"${url}\"`)\n}\n\nexport const getLnurlObject = (params: URLSearchParams, obj: string): string => {\n    return params.get(obj) ?? ''\n}"],"mappings":";AAAA;;;ACAO,IAAM,gBAAgB,CAAC,QAAgB;AAE1C,MAAI,CAAC,IAAI,SAAS,KAAK,GAAG;AACtB,UAAM,YAAY;AAAA,EACtB;AAEA,QAAM,QAAQ;AACd,QAAM,SAAS,MAAM,KAAK,GAAG;AAC7B,MAAI,UAAU,OAAO,SAAS,GAAG;AAC7B,WAAO,OAAO;AAAA,EAClB;AACA,QAAM,IAAI,MAAM,+BAA+B,MAAM;AACzD;AAEO,IAAM,iBAAiB,CAAC,QAAyB,QAAwB;AAdhF;AAeI,SAAO,aAAO,IAAI,GAAG,MAAd,YAAmB;AAC9B;;;ADbA,IAAM,QAAQ;AACd,IAAM,SAAS;AAUf,IAAM,SAAS,CAAC,UAAgC;AAC9C,QAAM,WAAW;AACjB,MAAI,MAAM,YAAY,EAAE,SAAS,QAAQ,GAAG;AAC1C,YAAQ,MAAM,YAAY,EAAE,MAAM,YAAY,EAAE;AAAA,EAClD;AAEA,QAAM,UAAU,OAAO,OAAO,OAAO,KAAK;AAC1C,QAAM,gBAAgB,OAAO,KAAK,OAAO,UAAU,QAAQ,KAAK,CAAC,EAAE,SAAS,MAAM;AAElF,QAAM,QAAQ,cAAc,MAAM,GAAG;AACrC,MAAI,MAAM,WAAW,GAAG;AACtB,UAAM,IAAI,MAAM,gCAAgC,SAAS;AAAA,EAC3D;AAEA,QAAM,MAAM,MAAM;AAClB,QAAM,SAAS,cAAc,GAAG;AAChC,QAAM,cAAc,IAAI,gBAAgB,MAAM,EAAE;AAChD,SAAO,EAAE,SAAS,eAAe,QAAQ,KAAK,eAAe,aAAa,KAAK,GAAG,IAAI,eAAe,aAAa,IAAI,GAAG,QAAQ,eAAe,aAAa,QAAQ,EAAE;AACzK;AAEA,IAAM,SAAS,CAAC,cAA8B;AAC5C,MAAI,QAAQ,OAAO,QAAQ,OAAO,KAAK,WAAW,MAAM,CAAC;AACzD,SAAO,OAAO,OAAO,QAAQ,OAAO,KAAK,EAAE,YAAY;AACzD;","names":[]}